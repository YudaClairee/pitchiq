// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DeckStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String?
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  decks    Deck[]
  sessions Session[]
}

model Session {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])

  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Deck {
  id       String     @id @default(cuid())
  fileName String
  filePath String
  status   DeckStatus @default(PENDING)

  startupName String
  industry    String
  summary     String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  analysis Analysis?
}

model Analysis {
  id           String   @id @default(cuid())
  overallScore Int
  response     Json     @db.JsonB
  createdAt    DateTime @default(now())
  deckId       String   @unique
  deck         Deck     @relation(fields: [deckId], references: [id])
}
